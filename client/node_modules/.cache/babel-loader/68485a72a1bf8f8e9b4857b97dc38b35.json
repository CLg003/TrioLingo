{"ast":null,"code":"var _jsxFileName = \"/Users/clairelaing/codeclan_work/week_10/triolingo_group_project/client/src/components/LSTwoDropZone.js\",\n    _s = $RefreshSig$();\n\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropZone = _ref => {\n  _s();\n\n  let {\n    key,\n    type,\n    english,\n    spanish\n  } = _ref;\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: type // accept: type,\n    // drop: (item) => addItemToBoard(item.id),\n    // collect: (monitor) => ({\n    //     isOver: !!monitor.isOver(),\n    // }),\n\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: \"dropzone\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: true,\n      children: spanish\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DropZone, \"J1zlkivqRCGcJFAnPMhlnYWlWR0=\", false, function () {\n  return [useDrop];\n});\n\n_c = DropZone;\nexport default DropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropZone\");","map":{"version":3,"sources":["/Users/clairelaing/codeclan_work/week_10/triolingo_group_project/client/src/components/LSTwoDropZone.js"],"names":["useDrop","DropZone","key","type","english","spanish","isOver","drop","accept"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,WAAxB;;;AAEA,MAAMC,QAAQ,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAkC;AAEhD,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAWC,IAAX,IAAmBP,OAAO,CAAC,OAAO;AACpCQ,IAAAA,MAAM,EAAEL,IAD4B,CAEpC;AACA;AACA;AACA;AACA;;AANoC,GAAP,CAAD,CAAhC;AAUA,sBACI;AAAK,IAAA,GAAG,EAAEI,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAA,2BACI;AAAG,MAAA,SAAS,MAAZ;AAAA,gBAAcF;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjBD;;GAAMJ,Q;UAEuBD,O;;;KAFvBC,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import { useDrop } from 'react-dnd';\n\nconst DropZone = ({key, type, english, spanish}) => {\n\n    const [{isOver}, drop] = useDrop(() => ({\n        accept: type\n        // accept: type,\n        // drop: (item) => addItemToBoard(item.id),\n        // collect: (monitor) => ({\n        //     isOver: !!monitor.isOver(),\n        // }),\n    }));\n\n\n    return (\n        <div ref={drop} className=\"dropzone\">\n            <p className>{spanish}</p>\n        </div>\n    );\n}\n\nexport default DropZone;"]},"metadata":{},"sourceType":"module"}