{"ast":null,"code":"import { useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport Colour from './LSTwoColour';\nimport '../LSTwoDragDrop.css';\n\nconst DragDrop = _ref => {\n  var _s = $RefreshSig$();\n\n  let {\n    words\n  } = _ref;\n  // NEED AN ARRAY OF THE COLOURS FOR DnD\n  const colourList = [words.black, words.blue, words.brown, words.green, words.orange, words.purple, words.red, words.white, words.yellow]; // ADDING COLOUR PROPERTY\n\n  colourList[0]['colour'] = \"black\";\n  colourList[1]['colour'] = \"blue\";\n  colourList[2]['colour'] = \"brown\";\n  colourList[3]['colour'] = \"green\";\n  colourList[4]['colour'] = \"orange\";\n  colourList[5]['colour'] = \"purple\";\n  colourList[6]['colour'] = \"red\";\n  colourList[7]['colour'] = \"white\";\n  colourList[8]['colour'] = \"yellow\"; // ADDING ID PROPERTY (WON'T BE NEEDED ONCE DB UP AND RUNNING)\n\n  colourList[0]['id'] = 0;\n  colourList[1]['id'] = 1;\n  colourList[2]['id'] = 2;\n  colourList[3]['id'] = 3;\n  colourList[4]['id'] = 4;\n  colourList[5]['id'] = 5;\n  colourList[6]['id'] = 6;\n  colourList[7]['id'] = 7;\n  colourList[8]['id'] = 8;\n\n  const DragDrop = () => {\n    _s();\n\n    // DESTINATION FOR DRAGGED ITEMS\n    const [board, setBoard] = useState([]); // MONITORING WHETHER THE ITEM IS BEING DROPPED\n\n    const [{\n      isOver\n    }, drop] = useDrop(() => ({\n      accept: \"colour\",\n      drop: item => addItemToBoard(item.id),\n      collect: monitor => ({\n        isOver: !!monitor.isOver()\n      })\n    }));\n\n    const addItemToBoard = id => {\n      // console.log(id);\n      const copyColourList = colourList.filter(colour => id === colour.id); // TO ADD TO THE SELECTION OF DRAGGED ITEMS:\n\n      setBoard(board);\n    };\n  };\n\n  _s(DragDrop, \"D3GWHorUUkOj7fZWY1d2IVoQd2k=\", false, function () {\n    return [useDrop];\n  });\n};\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/Users/clairelaing/codeclan_work/week_10/triolingo_group_project/client/src/components/LSTwoDragDrop.js"],"names":["useState","useDrop","Colour","DragDrop","words","colourList","black","blue","brown","green","orange","purple","red","white","yellow","board","setBoard","isOver","drop","accept","item","addItemToBoard","id","collect","monitor","copyColourList","filter","colour"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport Colour from './LSTwoColour';\nimport '../LSTwoDragDrop.css';\n\n\n\nconst DragDrop = ({words}) => {\n    // NEED AN ARRAY OF THE COLOURS FOR DnD\n    const colourList = [words.black, words.blue, words.brown, words.green, words.orange, words.purple, words.red, words.white, words.yellow];\n    // ADDING COLOUR PROPERTY\n    colourList[0]['colour'] = \"black\";\n    colourList[1]['colour'] = \"blue\";\n    colourList[2]['colour'] = \"brown\";\n    colourList[3]['colour'] = \"green\";\n    colourList[4]['colour'] = \"orange\";\n    colourList[5]['colour'] = \"purple\";\n    colourList[6]['colour'] = \"red\";\n    colourList[7]['colour'] = \"white\";\n    colourList[8]['colour'] = \"yellow\";\n    // ADDING ID PROPERTY (WON'T BE NEEDED ONCE DB UP AND RUNNING)\n    colourList[0]['id'] = 0;\n    colourList[1]['id'] = 1;\n    colourList[2]['id'] = 2;\n    colourList[3]['id'] = 3;\n    colourList[4]['id'] = 4;\n    colourList[5]['id'] = 5;\n    colourList[6]['id'] = 6;\n    colourList[7]['id'] = 7;\n    colourList[8]['id'] = 8;\n\n    \n    const DragDrop = () => {\n        // DESTINATION FOR DRAGGED ITEMS\n        const [board, setBoard] = useState([]);\n        // MONITORING WHETHER THE ITEM IS BEING DROPPED\n        const [{isOver}, drop] = useDrop(() => ({\n            accept: \"colour\",\n            drop: (item) => addItemToBoard(item.id),\n            collect: (monitor) => ({\n                isOver: !!monitor.isOver(),\n            }),\n        }));\n\n        const addItemToBoard = (id) => {\n            // console.log(id);\n            const copyColourList = colourList.filter((colour) => id === colour.id);\n            // TO ADD TO THE SELECTION OF DRAGGED ITEMS:\n            setBoard((board))\n        }\n    }\n\n\n}\n\nexport default DragDrop;"]},"metadata":{},"sourceType":"module"}