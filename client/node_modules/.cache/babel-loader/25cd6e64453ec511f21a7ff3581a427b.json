{"ast":null,"code":"var _jsxFileName = \"/Users/elicodes/codeclan_hworks/week_10/wk10_javascript_group_project_triolingo_210422/client/src/containers/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport SingleCard from \"../components/SingleCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/apple.pic.png\"\n}, {\n  \"src\": \"/img/bus.png\"\n}, {\n  \"src\": \"/img/pez.png\"\n}, {\n  \"src\": \"/img/rojo.png\"\n}, {\n  \"src\": \"/img/tres.png\"\n}, {\n  \"src\": \"/img/perro.png\"\n}];\nconst imagesWords = [{\n  \"src\": \"/img/manzanap.png\"\n}, {\n  \"src\": \"/img/autobusp.png\"\n}, {\n  \"src\": \"/img/pezp.png\"\n}, {\n  \"src\": \"/img/rojop.png\"\n}, {\n  \"src\": \"/img/tresp.png\"\n}, {\n  \"src\": \"/img/perrop.png\"\n}];\n\nfunction Game() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...imagesWords] // the sort method will fire a function for each pair of item of\n    // item on the array and inside function if we return a number less \n    // than 0 the odd of those 2 items will stay the same. if we return \n    // greater than 0 the odd will be mixed up / Math.random will give us a random number. the end result will be a shuffled array with a random id\n    .sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  console.log(cards, turns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Test your Memoria \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \" New Game \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"DgXGRJOMO6ABd1pIeltbGt1J/vc=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/elicodes/codeclan_hworks/week_10/wk10_javascript_group_project_triolingo_210422/client/src/containers/Game.js"],"names":["useState","SingleCard","cardImages","imagesWords","Game","cards","setCards","turns","setTurns","shuffleCards","shuffledCards","sort","Math","random","map","card","id","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,UAAU,GAAG,CACf;AAAC,SAAO;AAAR,CADe,EAEf;AAAC,SAAO;AAAR,CAFe,EAGf;AAAC,SAAO;AAAR,CAHe,EAIf;AAAC,SAAO;AAAR,CAJe,EAKf;AAAC,SAAO;AAAR,CALe,EAMf;AAAC,SAAO;AAAR,CANe,CAAnB;AASA,MAAMC,WAAW,GAAG,CAChB;AAAC,SAAO;AAAR,CADgB,EAEhB;AAAC,SAAO;AAAR,CAFgB,EAGhB;AAAC,SAAO;AAAR,CAHgB,EAIhB;AAAC,SAAO;AAAR,CAJgB,EAKhB;AAAC,SAAO;AAAR,CALgB,EAMhB;AAAC,SAAO;AAAR,CANgB,CAApB;;AASA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACvB,UAAMC,aAAa,GAAG,CAAC,GAAGR,UAAJ,EAAiB,GAAGC,WAApB,EACtB;AACA;AACA;AACA;AAJsB,KAKrBQ,IALqB,CAKhB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GALN,EAMrBC,GANqB,CAMhBC,IAAD,KAAW,EAAC,GAAGA,IAAJ;AAAWC,MAAAA,EAAE,EAAEJ,IAAI,CAACC,MAAL;AAAf,KAAX,CANiB,CAAtB;AAQAP,IAAAA,QAAQ,CAACI,aAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACH,GAXD;;AAaAS,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAAmBE,KAAnB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAIE,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKJ,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACX,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAlCQX,I;;KAAAA,I;AAoCT,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport SingleCard from \"../components/SingleCard\";\n\nconst cardImages = [\n    {\"src\": \"/img/apple.pic.png\"},\n    {\"src\": \"/img/bus.png\"},\n    {\"src\": \"/img/pez.png\"},\n    {\"src\": \"/img/rojo.png\"},\n    {\"src\": \"/img/tres.png\"},\n    {\"src\": \"/img/perro.png\"}\n]\n\nconst imagesWords = [\n    {\"src\": \"/img/manzanap.png\"},\n    {\"src\": \"/img/autobusp.png\"},\n    {\"src\": \"/img/pezp.png\"},\n    {\"src\": \"/img/rojop.png\"},\n    {\"src\": \"/img/tresp.png\"},\n    {\"src\": \"/img/perrop.png\"}\n]\n\nfunction Game() {\n\n    const [cards, setCards] = useState([])\n    const [turns, setTurns] = useState(0)\n\n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages , ...imagesWords]\n        // the sort method will fire a function for each pair of item of\n        // item on the array and inside function if we return a number less \n        // than 0 the odd of those 2 items will stay the same. if we return \n        // greater than 0 the odd will be mixed up / Math.random will give us a random number. the end result will be a shuffled array with a random id\n        .sort(() => Math.random() - 0.5)\n        .map((card) => ({...card , id: Math.random()}))\n\n        setCards(shuffledCards)\n        setTurns(0)\n    }\n\n    console.log(cards, turns)\n\n    return (\n        <div className=\"Game\">\n            <h1> Test your Memoria </h1>\n            <button onClick = {shuffleCards}> New Game </button>\n\n            <div className=\"card-grid\">\n                {cards.map(card => (\n                    <SingleCard />\n                ))}\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}