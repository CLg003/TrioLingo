{"ast":null,"code":"var _jsxFileName = \"/Users/clairelaing/codeclan_work/week_10/triolingo_group_project/client/src/components/LSTwoDragDrop.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport Colour from './LSTwoColour';\nimport '../LSTwoDragDrop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DragDrop = _ref => {\n  _s();\n\n  let {\n    words\n  } = _ref;\n  // NEED AN ARRAY OF THE COLOURS FOR DnD\n  const colourList = [words.black, words.blue, words.brown, words.green, words.orange, words.purple, words.red, words.white, words.yellow]; // ADDING COLOUR PROPERTY\n\n  colourList[0]['english'] = \"black\";\n  colourList[1]['english'] = \"blue\";\n  colourList[2]['english'] = \"brown\";\n  colourList[3]['english'] = \"green\";\n  colourList[4]['english'] = \"orange\";\n  colourList[5]['english'] = \"purple\";\n  colourList[6]['english'] = \"red\";\n  colourList[7]['english'] = \"white\";\n  colourList[8]['english'] = \"yellow\"; // ADDING ID PROPERTY (WON'T BE NEEDED ONCE DB UP AND RUNNING)\n\n  colourList[0]['id'] = 0;\n  colourList[1]['id'] = 1;\n  colourList[2]['id'] = 2;\n  colourList[3]['id'] = 3;\n  colourList[4]['id'] = 4;\n  colourList[5]['id'] = 5;\n  colourList[6]['id'] = 6;\n  colourList[7]['id'] = 7;\n  colourList[8]['id'] = 8; // ADDING IMG PROPERTY (WON'T BE NEEDED ONCE IMAGES UPLOADED)\n\n  colourList[0]['img'] = '../images/colours/black.png';\n  colourList[1]['img'] = '../images/colours/blue.png';\n  colourList[2]['img'] = '../images/colours/brown.png';\n  colourList[3]['img'] = '../images/colours/green.png';\n  colourList[5]['img'] = '../images/colours/orange.png';\n  colourList[4]['img'] = '../images/colours/purple.png';\n  colourList[6]['img'] = '../images/colours/red.png';\n  colourList[7]['img'] = '../images/colours/white.png';\n  colourList[8]['img'] = '../images/colours/yellow.png'; // console.log(colourList);\n  // KANBAN BOARD TUTORIAL CODE:\n  // const channels = [\"backlog\", \"new\", \"wip\", \"review\", \"done\"];\n\n  const dropZones = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"black\", \"white\", \"brown\"]; // DESTINATION FOR DRAGGED ITEMS\n  // const [board, setBoard] = useState([]);\n  // MONITORING WHETHER THE ITEM IS BEING DROPPED\n\n  for (let zone of dropZones) {}\n\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: zone,\n    drop: item => addItemToBoard(item.id),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  const [board, setBoard] = useState([]);\n\n  const addItemToBoard = id => {\n    // console.log(id);\n    const copyColourList = colourList.filter(colour => id === colour.id); // TO ADD TO THE SELECTION OF DRAGGED ITEMS:\n\n    setBoard(board => [...board, copyColourList[0]]); // TO REPLACE CURRENT ITEM WITH DRAGGED ITEM:\n    // setBoard([copyColourList[0]]);\n  }; // const DropZone = () => {\n  //     const ref = useRef(null);\n  //     const [, drop] = useDrop({\n  //       accept: \"card\",\n  //       drop(item) {\n  //         changeTaskStatus(item.id, status);\n  //       }\n  //     });\n  //     drop(ref);\n  //     return <div ref={ref}> {children}</div>;\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dnd-colours\",\n      children: colourList.map(colour => {\n        return /*#__PURE__*/_jsxDEV(Colour, {\n          name: colour.english,\n          img: colour.img,\n          id: colour.id\n        }, colour.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dnd-board\",\n      ref: drop,\n      children: board.map(colour => {\n        return /*#__PURE__*/_jsxDEV(Colour, {\n          name: colour.english,\n          img: colour.img,\n          id: colour.id\n        }, colour.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DragDrop, \"91LUMBgixhGJepI1fIty+g++On0=\", false, function () {\n  return [useDrop];\n});\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/Users/clairelaing/codeclan_work/week_10/triolingo_group_project/client/src/components/LSTwoDragDrop.js"],"names":["useState","useDrop","Colour","DragDrop","words","colourList","black","blue","brown","green","orange","purple","red","white","yellow","dropZones","zone","isOver","drop","accept","item","addItemToBoard","id","collect","monitor","board","setBoard","copyColourList","filter","colour","map","english","img"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport Colour from './LSTwoColour';\nimport '../LSTwoDragDrop.css';\n\n\n\nconst DragDrop = ({words}) => {\n    // NEED AN ARRAY OF THE COLOURS FOR DnD\n    const colourList = [words.black, words.blue, words.brown, words.green, words.orange, words.purple, words.red, words.white, words.yellow];\n    // ADDING COLOUR PROPERTY\n    colourList[0]['english'] = \"black\";\n    colourList[1]['english'] = \"blue\";\n    colourList[2]['english'] = \"brown\";\n    colourList[3]['english'] = \"green\";\n    colourList[4]['english'] = \"orange\";\n    colourList[5]['english'] = \"purple\";\n    colourList[6]['english'] = \"red\";\n    colourList[7]['english'] = \"white\";\n    colourList[8]['english'] = \"yellow\";\n    // ADDING ID PROPERTY (WON'T BE NEEDED ONCE DB UP AND RUNNING)\n    colourList[0]['id'] = 0;\n    colourList[1]['id'] = 1;\n    colourList[2]['id'] = 2;\n    colourList[3]['id'] = 3;\n    colourList[4]['id'] = 4;\n    colourList[5]['id'] = 5;\n    colourList[6]['id'] = 6;\n    colourList[7]['id'] = 7;\n    colourList[8]['id'] = 8;\n    // ADDING IMG PROPERTY (WON'T BE NEEDED ONCE IMAGES UPLOADED)\n    colourList[0]['img'] = '../images/colours/black.png';\n    colourList[1]['img'] = '../images/colours/blue.png';\n    colourList[2]['img'] = '../images/colours/brown.png';\n    colourList[3]['img'] = '../images/colours/green.png';\n    colourList[5]['img'] = '../images/colours/orange.png';\n    colourList[4]['img'] = '../images/colours/purple.png';\n    colourList[6]['img'] = '../images/colours/red.png';\n    colourList[7]['img'] = '../images/colours/white.png';\n    colourList[8]['img'] = '../images/colours/yellow.png';\n\n    // console.log(colourList);\n\n    // KANBAN BOARD TUTORIAL CODE:\n    // const channels = [\"backlog\", \"new\", \"wip\", \"review\", \"done\"];\n    const dropZones = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"black\", \"white\", \"brown\"]\n    \n    // DESTINATION FOR DRAGGED ITEMS\n    // const [board, setBoard] = useState([]);\n\n    // MONITORING WHETHER THE ITEM IS BEING DROPPED\n    \n    for (let zone of dropZones) {\n\n    }\n    const [{isOver}, drop] = useDrop(() => ({\n        accept: zone,\n        drop: (item) => addItemToBoard(item.id),\n        collect: (monitor) => ({\n            isOver: !!monitor.isOver(),\n        }),\n    }));\n\n    const [board, setBoard] = useState([]);\n\n    const addItemToBoard = (id) => {\n        // console.log(id);\n        const copyColourList = colourList.filter((colour) => id === colour.id);\n        // TO ADD TO THE SELECTION OF DRAGGED ITEMS:\n        setBoard((board) => [...board, copyColourList[0]]);\n\n        // TO REPLACE CURRENT ITEM WITH DRAGGED ITEM:\n        // setBoard([copyColourList[0]]);\n    };\n\n    // const DropZone = () => {\n    //     const ref = useRef(null);\n    //     const [, drop] = useDrop({\n    //       accept: \"card\",\n    //       drop(item) {\n    //         changeTaskStatus(item.id, status);\n    //       }\n    //     });\n    //     drop(ref);\n    //     return <div ref={ref}> {children}</div>;\n    //   };\n\n    return (\n        <>\n        <div className=\"dnd-colours\">\n            {colourList.map((colour) => {\n                return <Colour name={colour.english} img={colour.img} id={colour.id} key={colour.id} />\n            })}\n        </div>\n        <div className=\"dnd-board\" ref={drop}>\n            {board.map((colour) => {\n                return <Colour name={colour.english} img={colour.img} id={colour.id} key={colour.id} />\n            })}\n        </div>\n        </>\n    );\n    \n}\n\nexport default DragDrop;"]},"metadata":{},"sourceType":"module"}